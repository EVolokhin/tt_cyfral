{"version":3,"sources":["store/actions.js","store/configurestore.js","components/functions/localStorage.js","store/reducers.js","components/LogIn.jsx","components/NewUser.jsx","components/LocalUsers.jsx","components/Message.jsx","components/ChangeUserData.jsx","components/AdminPage.jsx","App.jsx","index.jsx"],"names":["ACTION_TYPES","setCurrentUser","value","type","payload","initialState","usersList","initialValue","localStorage","getItem","JSON","parse","setItem","stringify","localUsers","currentUser","name","position","phone","login","password","id","activeUser","store","createStore","state","action","applyMiddleware","thunk","selectUsers","LogIn","useState","userLogin","setUserLogin","setPassword","isPassword","setIsPassword","isLogin","setIsLogin","referrer","setReferrer","dispatch","useDispatch","useSelector","handlChange","fieldName","event","target","className","to","onChange","defaultValue","disabled","map","user","placeholder","onClick","find","person","NewUser","setName","setPosition","setPhone","setLogin","controlPass","setControlPass","handleChange","passCorrect","buttonActive","newUser","Date","now","window","location","href","LocalUsers","Message","input","setInput","output","setOutput","cols","rows","setTimeout","ChangeUserData","adminUser","setUser","editChange","undefined","htmlFor","index","findIndex","changedList","splice","alert","AdminPage","removeItem","path","App","length","exact","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"yPACaA,EACD,oBADCA,EAEG,sBAFHA,EAGE,sBAQFC,EAAiB,SAAAC,GAAK,MAAK,CACtCC,KAAMH,EACNI,QAASF,ICTLG,EAAe,CACnBC,UCHwB,WACxB,IAAMC,EAAeC,aAAaC,QAAQ,aACtCC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAIJ,OAFAD,aAAaI,QAAQ,YAAaF,KAAKG,UAAUN,IAE1CA,EDJIO,GACXC,YCOwB,WACxB,IAAMR,EAAeC,aAAaC,QAAQ,cACtCC,KAAKC,MAAMH,aAAaC,QAAQ,eAChC,CACAO,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,GAAI,IAKR,OAFAb,aAAaI,QAAQ,aAAcF,KAAKG,UAAUN,IAE3CA,EDrBMe,IAGFC,EAAQC,aERM,SAACC,EAAOC,GACjC,OAAQA,EAAOvB,MACb,KAAKH,EACH,MAAO,CACLM,UAAU,GAAD,mBAAMmB,EAAMnB,WAAZ,CAAuBoB,EAAOtB,WAE3C,KAAKJ,EACH,OAAO,2BACFyB,GADL,IAEEV,YAAaW,EAAOtB,UAExB,KAAKJ,EACH,MAAO,CACLM,UAAWoB,EAAOtB,SAGtB,QACE,OAAOqB,KFPXpB,EACAsB,YAAgBC,MAKLC,EAAc,SAAAJ,GAAK,OAAIA,EAAMnB,WAC7BS,EAAc,SAAAU,GAAK,OAAIA,EAAMV,a,sBGb7Be,EAAQ,WAAO,IAAD,EACSC,mBAAS,IADlB,mBAClBC,EADkB,KACPC,EADO,OAEOF,mBAAS,IAFhB,mBAElBX,EAFkB,KAERc,EAFQ,OAGWH,mBAAS,MAHpB,mBAGlBI,EAHkB,KAGNC,EAHM,OAIKL,mBAAS,MAJd,mBAIlBM,EAJkB,KAITC,EAJS,OAKOP,mBAAS,MALhB,mBAKlBQ,EALkB,KAKRC,EALQ,KAOnBC,EAAWC,cACXpC,EAAYqC,YAAYd,GAGxBe,EAAc,SAACC,EAAWC,GAAW,IACjC5C,EAAU4C,EAAMC,OAAhB7C,MAEU,SAAd2C,GACFZ,EAAa/B,GACboC,GAAW,KAEXJ,EAAYhC,GACZkC,GAAc,KAyClB,OACE,sBAAKY,UAAU,uCAAf,UACGT,GAAY,cAAC,IAAD,CAAUU,GAAIV,IAC3B,uBAAMS,UAAU,qBAAqBhC,KAAK,QAA1C,UACE,oBAAIgC,UAAU,6BAAd,gFAICX,GAED,gDAKA,yBACEW,UAAU,mBACVhC,KAAK,OACLK,GAAG,OACH6B,SAAU,SAAAJ,GAAK,OAAIF,EAAY,OAAQE,IACvCK,aAAa,SALf,UAOE,wBAAQjD,MAAM,SAASkD,UAAQ,EAA/B,+BAGC9C,EAAU+C,KAAI,SAAAC,GAAI,OACjB,wBACEpD,MAAOoD,EAAKnC,MADd,SAIGmC,EAAKnC,OAFDmC,EAAKjC,UAOfc,GACe,OAAfA,GAED,iDAIA,uBACEa,UAAU,OACV7C,KAAK,WACLa,KAAK,WACLuC,YAAY,iBACZlC,GAAG,OACHnB,MAAOkB,EACP8B,SAAU,SAAAJ,GAAK,OAAIF,EAAY,OAAQE,MAGzC,sBAAKE,UAAU,eAAf,UACE,wBACEA,UAAU,uBACV7C,KAAK,SACLqD,QAtEW,WACnB,GApBKxB,EAMAZ,EAMed,EAAUmD,MAAK,SAAAC,GAAM,OAAI1B,IAAc0B,EAAOvC,SAE9CC,WAAaA,GAP/BgB,GAAc,GAEP,IARPE,GAAW,GAEJ,GAiBT,CAMA,IAAMgB,EAAOhD,EAAUmD,MAAK,SAAAC,GAAM,OAAI1B,IAAc0B,EAAOvC,SAE3DsB,EAASxC,EAAeqD,IACxB9C,aAAaI,QAAQ,aAAcF,KAAKG,UAAUyC,IAClDd,EAAY,eATVJ,GAAc,IAiEV,4CAOA,cAAC,IAAD,CACEa,GAAG,WACHD,UAAU,uBAFZ,iJC1HGW,EAAU,WAAO,IAAD,EACH5B,qBADG,mBACpBf,EADoB,KACd4C,EADc,OAEK7B,mBAAS,IAFd,mBAEpBd,EAFoB,KAEV4C,EAFU,OAGD9B,mBAAS,IAHR,mBAGpBb,EAHoB,KAGb4C,EAHa,OAID/B,mBAAS,IAJR,mBAIpBZ,EAJoB,KAIb4C,EAJa,OAKKhC,mBAAS,IALd,mBAKpBX,EALoB,KAKVc,EALU,OAMWH,mBAAS,IANpB,mBAMpBiC,EANoB,KAMPC,EANO,KAQrB3D,EAAYqC,YAAYd,GAExBqC,EAAe,SAACpB,GACpB,OAAQA,EAAMC,OAAO/B,MACnB,IAAK,OACH4C,EAAQd,EAAMC,OAAO7C,OACrB,MACF,IAAK,WACH2D,EAAYf,EAAMC,OAAO7C,OACzB,MACF,IAAK,QACH4D,EAAShB,EAAMC,OAAO7C,OACtB,MACF,IAAK,QACH6D,EAASjB,EAAMC,OAAO7C,OACtB,MACF,IAAK,WACHgC,EAAYY,EAAMC,OAAO7C,OACzB,MACF,IAAK,UACH+D,EAAenB,EAAMC,OAAO7C,SAuB5BiE,EAAe/C,IAAa4C,EAI5BI,GAAiBpD,IACjBC,IACAC,IACAC,IACAC,IACA+C,EAEN,OACE,uBACEnB,UAAU,sCACVhC,KAAK,eAFP,UAKE,sBAAKgC,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,kCAGA,uBACElB,KAAK,OACL6C,UAAU,eACV3B,GAAG,OACHL,KAAK,OACLd,MAAOc,EACPkC,SAAUgB,EACVX,YAAY,sHAIhB,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,oEAGA,uBACElB,KAAK,OACL6C,UAAU,eACV3B,GAAG,WACHL,KAAK,WACLd,MAAOe,EACPiC,SAAUgB,EACVX,YAAY,sCAIhB,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,wDAGA,uBACElB,KAAK,MACL6C,UAAU,eACV3B,GAAG,QACHL,KAAK,QACLd,MAAOgB,EACPgC,SAAUgB,EACVX,YAAY,qBAIhB,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,4CAGA,uBACElB,KAAK,OACL6C,UAAU,eACV3B,GAAG,QACHL,KAAK,QACLd,MAAOiB,EACP+B,SAAUgB,OAId,sBAAKlB,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,kDAGA,uBACE2B,UAAU,eACV7C,KAAK,WACLkB,GAAG,WACHL,KAAK,WACLd,MAAOkB,EACP8B,SAAUgB,OAId,sBAAKlB,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAmB3B,GAAG,4BAAtC,qHAGA,uBACE2B,UAAU,eACV7C,KAAK,WACLkB,GAAG,UACHL,KAAK,UACLd,MAAO8D,EACPd,SAAUgB,OAGbC,GACC,sBAAMnB,UAAU,yBAAhB,kPAKDoB,GACC,sBAAMpB,UAAU,yBAAhB,2IAIF,wBACEA,UAAU,uBACV7C,KAAK,SACLqD,QApIe,WACnB,IAAMa,EAAU,CACdrD,OACAC,WACAC,QACAC,QACAC,WACAC,IAAKiD,KAAKC,OAGZ/D,aAAaI,QAAQ,YAAaF,KAAKG,UAAL,sBAAmBP,GAAnB,CAA8B+D,MAEhEG,OAAOC,SAASC,KAAO,eAyHnBtB,SAAUgB,EAJZ,oFCrKOO,EAAa,WACxB,IAAMrE,EAAYqC,YAAYd,GAE9B,OACE,sBAAKmB,UAAU,eAAf,UAEE,2GAIA,wBAAOA,UAAU,uCAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oDACA,wFACA,4EACA,qEAGJ,gCACG1C,EAAU+C,KAAI,SAAAC,GAAI,OACjB,+BACE,6BAAKA,EAAKtC,OACV,6BAAKsC,EAAKrC,WACV,6BAAKqC,EAAKpC,QACV,6BAAKoC,EAAKnC,UAJHmC,EAAKjC,gBCvBbuD,EAAU,WAAO,IAAD,EACD7C,mBAAS,IADR,mBACpB8C,EADoB,KACbC,EADa,OAEC/C,mBAAS,IAFV,mBAEpBgD,EAFoB,KAEZC,EAFY,KAiB3B,OACE,qCACE,qBAAKhC,UAAU,OAAf,oEAIA,0BACEA,UAAU,OACVhC,KAAK,QACLd,MAAO2E,EACP3B,SAvBe,SAACJ,GACpBgC,EAAShC,EAAMC,OAAO7C,QAuBlBmB,GAAG,QACH4D,KAAK,KACLC,KAAK,IACL3B,YAAY,sGAGd,wBACEpD,KAAK,SACLqD,QA3Bc,WAClBwB,EAAUH,GACVC,EAAS,IACTK,YAAW,kBACTH,EAAU,MACT,MAuBChC,UAAU,8BAHZ,+GAQA,qBAAKA,UAAU,2BAAf,SACE,8BAAM+B,U,QCtCDK,EAAiB,WAE5B,IAAM3C,EAAWC,cACXpC,EAAYqC,YAAYd,GACxBwD,EAAY1C,YAAY5B,GAJI,EAMVgB,mBAASsD,GANC,mBAM3B/B,EAN2B,KAMrBgC,EANqB,KAU5BC,EAAa,SAACzC,GAClBwC,EAAQ,2BACHhC,GADE,kBAEJR,EAAMC,OAAO/B,KAAO8B,EAAMC,OAAO7C,UAuBtC,OACE,0CACYsF,IAATlC,GAAsB,cAAC,IAAD,CAAUL,GAAG,MACpC,sBAAKD,UAAU,sCAAf,UACE,uBAAOyC,QAAQ,YAAf,kCACA,uBACEzC,UAAU,kBACV7C,KAAK,OACLkB,GAAG,YACHL,KAAK,OACLkC,SAAUqC,EACVrF,MAAOoD,EAAKtC,OAGd,uBAAOyE,QAAQ,gBAAf,oEACA,uBACEzC,UAAU,kBACV7C,KAAK,OACLkB,GAAG,gBACHL,KAAK,WACLkC,SAAUqC,EACVrF,MAAOoD,EAAKrC,WAGd,uBAAOwE,QAAQ,aAAf,wDACA,uBACEzC,UAAU,kBACV7C,KAAK,MACLkB,GAAG,aACHL,KAAK,QACLkC,SAAUqC,EACVrF,MAAOoD,EAAKpC,QAGd,uBAAOuE,QAAQ,aAAf,4CACA,uBACEzC,UAAU,kBACV7C,KAAK,OACLkB,GAAG,aACHL,KAAK,QACLkC,SAAUqC,EACVrF,MAAOoD,EAAKnC,QAGd,uBAAOsE,QAAQ,gBAAf,kDACA,uBACEzC,UAAU,kBACV7C,KAAK,OACLkB,GAAG,gBACHL,KAAK,WACLkC,SAAUqC,EACVrF,MAAOoD,EAAKlC,WAGd,wBACEjB,KAAK,SACLqD,QAxEW,WAEjBhD,aAAaI,QAAQ,aAAcF,KAAKG,UAAUyC,IAClDb,EAASxC,EAAeqD,IAGxB,IAAMoC,EAAQpF,EAAUqF,WAAU,SAAAjC,GAAM,OAAI2B,EAAUhE,KAAOqC,EAAOrC,MAC9DuE,EAAW,YAAOtF,GAExBsF,EAAYC,OAAOH,EAAO,EAAGpC,GAE7Bb,ERrBgC,CAClCtC,KAAMH,EACNI,QQmBsBwF,IACpBpF,aAAaI,QAAQ,YAAaF,KAAKG,UAAU+E,IACjDE,MAAM,kHA4DA9C,UAAU,8BAHZ,kIC3FK+C,EAAY,WAMvB,OACE,sBAAK/C,UAAU,qDAAf,UAEE,8BACE,wBACEA,UAAU,wBACV7C,KAAK,SACLqD,QAZK,WACXgB,OAAOC,SAASC,KAAO,cACvBlE,aAAawF,WAAW,eAOpB,8CASF,oBAAIhD,UAAU,6BAAd,uIAIA,cAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,oBAAjC,8LAGA,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,oBAAlC,6IAGA,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,oBAApC,oEAIA,cAAC,IAAD,CAAOiD,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,EAAD,UCpCKC,G,MAAM,WACjB,IAAM5F,EAAYqC,YAAYd,GAE9B,OACE,qCACyB,IAArBvB,EAAU6F,QAAkB,cAAC,IAAD,CAAUlD,GAAG,aAC3C,cAAC,IAAD,CAAOgD,KAAK,IAAIG,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOH,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,WCXRI,IAASC,OACP,cAAC,IAAD,CAAU/E,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQgF,SAAS,cAAjB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UAKNC,SAASC,eAAe,W","file":"static/js/main.ef1886c5.chunk.js","sourcesContent":["\nexport const ACTION_TYPES = {\n  ADD_USER: 'App::setUsersList',\n  CURRENT_USER: 'App::setCurrentUser',\n  CHANGE_USER: 'App::changeUserInfo',\n};\n\nexport const addUser = value => ({\n  type: ACTION_TYPES.ADD_USER,\n  payload: value,\n});\n\nexport const setCurrentUser = value => ({\n  type: ACTION_TYPES.CURRENT_USER,\n  payload: value,\n});\n\nexport const changeUser = value => ({\n  type: ACTION_TYPES.CHANGE_USER,\n  payload: value,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { localUsers, activeUser } from '../components/functions/localStorage';\n\nconst initialState = {\n  usersList: localUsers(),\n  currentUser: activeUser(),\n};\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(thunk),\n);\n\n// selectors\n\nexport const selectUsers = state => state.usersList;\nexport const currentUser = state => state.currentUser;\n","\n// setting list of registerred users to local storage\n// or setting the empty array\nexport const localUsers = () => {\n  const initialValue = localStorage.getItem('usersList')\n    ? JSON.parse(localStorage.getItem('usersList'))\n    : [];\n\n  localStorage.setItem('usersList', JSON.stringify(initialValue));\n\n  return initialValue;\n};\n\n// setting an active user\nexport const activeUser = () => {\n  const initialValue = localStorage.getItem('activeUser')\n    ? JSON.parse(localStorage.getItem('activeUser'))\n    : {\n      name: '',\n      position: '',\n      phone: '',\n      login: '',\n      password: '',\n      id: '',\n    };\n\n  localStorage.setItem('activeUser', JSON.stringify(initialValue));\n\n  return initialValue;\n};\n","import { ACTION_TYPES } from './actions';\n\nexport const rootReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_USER:\n      return {\n        usersList: [...state.usersList, action.payload],\n      };\n    case ACTION_TYPES.CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case ACTION_TYPES.CHANGE_USER:\n      return {\n        usersList: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUsers } from '../store/configurestore';\nimport { setCurrentUser } from '../store/actions';\n\nexport const LogIn = () => {\n  const [userLogin, setUserLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPassword, setIsPassword] = useState(null);\n  const [isLogin, setIsLogin] = useState(null);\n  const [referrer, setReferrer] = useState(null);\n\n  const dispatch = useDispatch();\n  const usersList = useSelector(selectUsers);\n\n  // фукция для котнролируемых полей ввода\n  const handlChange = (fieldName, event) => {\n    const { value } = event.target;\n\n    if (fieldName === 'user') {\n      setUserLogin(value);\n      setIsLogin(true);\n    } else {\n      setPassword(value);\n      setIsPassword(true);\n    }\n  };\n\n  // функция проверки авторизации, наличия логина и пароля,\n  //  соответствии пароля данным в хранилище\n\n  const handleCheck = () => {\n    if (!userLogin) {\n      setIsLogin(false);\n\n      return false;\n    }\n\n    if (!password) {\n      setIsPassword(false);\n\n      return false;\n    }\n\n    const controlUser = usersList.find(person => userLogin === person.login);\n\n    return (controlUser.password === password);\n  };\n\n  // действие по нажатии кнопки Logg In\n\n  const handleLoggIn = () => {\n    if (!handleCheck()) {\n      setIsPassword(false);\n\n      return;\n    }\n\n    const user = usersList.find(person => userLogin === person.login);\n\n    dispatch(setCurrentUser(user));\n    localStorage.setItem('activeUser', JSON.stringify(user));\n    setReferrer('/admin');\n  };\n\n  return (\n    <div className=\"container-md bg-secondary text-white\">\n      {referrer && <Redirect to={referrer} />}\n      <form className=\"d-flex flex-column\" name=\"login\">\n        <h1 className=\"badge bg-primary text-wrap\">\n          Авторизация\n        </h1>\n\n        {isLogin\n      || (\n        <div>\n          Choose a user\n        </div>\n      )}\n\n        <select\n          className=\"form-select my-3\"\n          name=\"user\"\n          id=\"name\"\n          onChange={event => handlChange('user', event)}\n          defaultValue=\"choose\"\n        >\n          <option value=\"choose\" disabled>\n            --choose a user--\n          </option>\n          {usersList.map(user => (\n            <option\n              value={user.login}\n              key={user.id}\n            >\n              {user.login}\n            </option>\n          ))}\n        </select>\n\n        {isPassword\n      || isPassword === null\n      || (\n        <div>\n          WRONG PASSWORD\n        </div>\n      )}\n        <input\n          className=\"mb-5\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          id=\"pass\"\n          value={password}\n          onChange={event => handlChange('pass', event)}\n        />\n\n        <div className=\"d-grid gap-2\">\n          <button\n            className=\"btn btn-primary mb-3\"\n            type=\"button\"\n            onClick={handleLoggIn}\n          >\n            ВОЙТИ\n          </button>\n          <Link\n            to=\"/newuser\"\n            className=\"btn btn-primary mb-3\"\n          >\n            ДОБАВИТЬ ПОЛЬЗОВАТЕЛЯ\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUsers } from '../store/configurestore';\n\nexport const NewUser = () => {\n  const [name, setName] = useState();\n  const [position, setPosition] = useState('');\n  const [phone, setPhone] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [controlPass, setControlPass] = useState('');\n\n  const usersList = useSelector(selectUsers);\n\n  const handleChange = (event) => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'position':\n        setPosition(event.target.value);\n        break;\n      case 'phone':\n        setPhone(event.target.value);\n        break;\n      case 'login':\n        setLogin(event.target.value);\n        break;\n      case 'password':\n        setPassword(event.target.value);\n        break;\n      case 'control':\n        setControlPass(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = () => {\n    const newUser = {\n      name,\n      position,\n      phone,\n      login,\n      password,\n      id: +Date.now(),\n    };\n\n    localStorage.setItem('usersList', JSON.stringify([...usersList, newUser]));\n\n    window.location.href = '/tt_cyfral/';\n  };\n\n  const passCorrect = (password === controlPass);\n\n  // условия для активации кнопки - заполнены все поля,\n  // введный пароль и проверка совпадают иначе кнопка подтверждения не активна\n  const buttonActive = (!name\n    || !position\n    || !phone\n    || !login\n    || !password\n    || !passCorrect);\n\n  return (\n    <form\n      className=\"d-flex flex-column p-5 container-md\"\n      name=\"registration\"\n    >\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Ф.И.О\n        </span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Иванов Иван Иванович\"\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Должность\n        </span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"position\"\n          name=\"position\"\n          value={position}\n          onChange={handleChange}\n          placeholder=\"Юрист\"\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Телефон\n        </span>\n        <input\n          type=\"tel\"\n          className=\"form-control\"\n          id=\"phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}\n          placeholder=\"+380500000000\"\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Логин\n        </span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"login\"\n          name=\"login\"\n          value={login}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Пароль\n        </span>\n        <input\n          className=\"form-control\"\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\n          Подтвердите пароль\n        </span>\n        <input\n          className=\"form-control\"\n          type=\"password\"\n          id=\"control\"\n          name=\"control\"\n          value={controlPass}\n          onChange={handleChange}\n        />\n      </div>\n      {passCorrect || (\n        <span className=\"input-text text-danger\">\n          *пароль и подтверждение пароля не совпадают\n        </span>\n      ) }\n\n      {buttonActive && (\n        <span className=\"input-text text-danger\">\n          * Запоните все поля формы\n        </span>\n      )}\n      <button\n        className=\"btn btn-primary mb-3\"\n        type=\"button\"\n        onClick={handleSubmit}\n        disabled={buttonActive}\n      >\n        Подтвердить\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUsers } from '../store/configurestore';\n\nexport const LocalUsers = () => {\n  const usersList = useSelector(selectUsers);\n\n  return (\n    <div className=\"container-md\">\n\n      <div>\n        Пользователи\n      </div>\n\n      <table className=\"table table-striped text-center mb-5\">\n        <thead className=\"text-white\">\n          <tr>\n            <td>ФИО</td>\n            <td>Должность</td>\n            <td>Телефон</td>\n            <td>Логин</td>\n          </tr>\n        </thead>\n        <tbody>\n          {usersList.map(user => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.position}</td>\n              <td>{user.phone}</td>\n              <td>{user.login}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const Message = () => {\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  // ввводим сообщение в новом поле и очищем окно через 4 сек\n  const handleClick = () => {\n    setOutput(input);\n    setInput('');\n    setTimeout(() => (\n      setOutput('')\n    ), 4000);\n  };\n\n  return (\n    <>\n      <div className=\"mb-2\">\n        Сообщение\n      </div>\n\n      <textarea\n        className=\"mb-5\"\n        name=\"inbox\"\n        value={input}\n        onChange={handleChange}\n        id=\"inbox\"\n        cols=\"50\"\n        rows=\"5\"\n        placeholder=\"Введите сообщение\"\n      />\n\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        className=\"btn btn-lg btn-warning mb-5\"\n      >\n        Вывести сообщение\n      </button>\n\n      <div className=\"alert alert-success mb-3\">\n        <div>{output}</div>\n      </div>\n    </>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUsers, currentUser } from '../store/configurestore';\nimport { setCurrentUser, changeUser } from '../store/actions';\n\nexport const ChangeUserData = () => {\n  // длля доступа к глобальному состоянию\n  const dispatch = useDispatch();\n  const usersList = useSelector(selectUsers);\n  const adminUser = useSelector(currentUser);\n\n  const [user, setUser] = useState(adminUser);\n\n  // функция для изменения параметров\n\n  const editChange = (event) => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // функция с логикой сохранения изменений\n  // в инфо авторизированного пользовыателя\n\n  const saveChange = () => {\n    // заменяем текущего юзера в локальном хранилище и стэйте\n    localStorage.setItem('activeUser', JSON.stringify(user));\n    dispatch(setCurrentUser(user));\n\n    // заменяем в списке в стэйте и локальном списке\n    const index = usersList.findIndex(person => adminUser.id === person.id);\n    const changedList = [...usersList];\n\n    changedList.splice(index, 1, user);\n\n    dispatch(changeUser(changedList));\n    localStorage.setItem('usersList', JSON.stringify(changedList));\n    alert('Изменения сохранены');\n  };\n\n  return (\n    <>\n      {user === undefined && <Redirect to=\"/\" />}\n      <div className=\"d-flex flex-column p-5 container-md\">\n        <label htmlFor=\"edit-name\">Ф.И.О</label>\n        <input\n          className=\"add-user__input\"\n          type=\"text\"\n          id=\"edit-name\"\n          name=\"name\"\n          onChange={editChange}\n          value={user.name}\n        />\n\n        <label htmlFor=\"edit-position\">Должность</label>\n        <input\n          className=\"add-user__input\"\n          type=\"text\"\n          id=\"edit-position\"\n          name=\"position\"\n          onChange={editChange}\n          value={user.position}\n        />\n\n        <label htmlFor=\"edit-phone\">Телефон</label>\n        <input\n          className=\"add-user__input\"\n          type=\"tel\"\n          id=\"edit-phone\"\n          name=\"phone\"\n          onChange={editChange}\n          value={user.phone}\n        />\n\n        <label htmlFor=\"edit-login\">Логин</label>\n        <input\n          className=\"add-user__input\"\n          type=\"text\"\n          id=\"edit-login\"\n          name=\"login\"\n          onChange={editChange}\n          value={user.login}\n        />\n\n        <label htmlFor=\"edit-password\">Пароль</label>\n        <input\n          className=\"add-user__input\"\n          type=\"text\"\n          id=\"edit-password\"\n          name=\"password\"\n          onChange={editChange}\n          value={user.password}\n        />\n\n        <button\n          type=\"button\"\n          onClick={saveChange}\n          className=\"btn btn-lg btn-warning my-4\"\n        >\n          Сохранить изменения\n        </button>\n\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { LocalUsers } from './LocalUsers';\nimport { Message } from './Message';\nimport { ChangeUserData } from './ChangeUserData';\n\nexport const AdminPage = () => {\n  const exit = () => {\n    window.location.href = '/tt_cyfral/';\n    localStorage.removeItem('activeUser');\n  };\n\n  return (\n    <div className=\"container-md d-flex flex-column bg-info text-white\">\n\n      <div>\n        <button\n          className=\"btn btn-sm btn-danger\"\n          type=\"button\"\n          onClick={exit}\n        >\n          ВЫЙТИ\n        </button>\n      </div>\n\n      <h2 className=\"badge bg-primary text-wrap\">\n        СТРАНИЦА ПОЛЬЗОВАТЕЛЯ\n      </h2>\n\n      <Link to=\"/admin/data\" className=\"link-warning mb-3\">\n        Изменить параметры пользователя\n      </Link>\n      <Link to=\"/admin/users\" className=\"link-warning mb-3\">\n        Локальные пользователи\n      </Link>\n      <Link to=\"/admin/message\" className=\"link-warning mb-5\">\n        Сообщение\n      </Link>\n\n      <Route path=\"/admin/data\">\n        <ChangeUserData />\n      </Route>\n      <Route path=\"/admin/users\">\n        <LocalUsers />\n      </Route>\n      <Route path=\"/admin/message\">\n        <Message />\n      </Route>\n    </div>\n  );\n};\n","\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { selectUsers } from './store/configurestore';\nimport { LogIn } from './components/LogIn';\nimport { NewUser } from './components/NewUser';\nimport { AdminPage } from './components/AdminPage';\nimport './App.scss';\n\nexport const App = () => {\n  const usersList = useSelector(selectUsers);\n\n  return (\n    <>\n      {(usersList.length === 0) && (<Redirect to=\"/newuser\" />)}\n      <Route path=\"/\" exact>\n        <LogIn />\n      </Route>\n      <Route path=\"/newuser\">\n        <NewUser />\n      </Route>\n      <Route path=\"/admin\">\n        <AdminPage />\n      </Route>\n    </>\n  );\n};\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport { store } from './store/configurestore';\n\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/tt_cyfral/\">\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}